---
import { firestore } from "../../../data/config";
import {
  Category,
  getAuthor,
  getCategories,
  getCategory,
  getPosts,
  Post,
} from "../../../data/data";
import Layout from "../../../layouts/Layout.astro";
import { Markdown } from "@astropub/md";
import { docsOf } from "../../../util/util";
export async function getStaticPaths() {
  const categories = await getCategories();
  const posts: { post: Post; category: string }[] = [];

  for (const category of categories) {
    const catPosts = await getPosts(category.id);
    posts.push(
      ...catPosts.map((post) => {
        return { post, category: category.slug };
      })
    );
  }

  const params = posts.map((post) => {
    return {
      params: {
        category: post.category,
        post: post.post.slug,
        lang: post.post.lang,
      },
    };
  });

  return params;
}

const { post: postSlug, category: categorySlug, lang } = Astro.params;

const category = docsOf<Category>(
  await firestore
    .collection("categories")
    .where("slug", "==", categorySlug)
    .get()
)[0];
const post = docsOf<Post>(
  await firestore
    .collection("posts")
    .where("slug", "==", postSlug)
    .where("category", "==", category.id)
    .get()
)[0];

const author = (await getAuthor(post.author))!;
---

<Layout title={post?.title || "Blog post"}>
  <header>
    <a href={`/en`}>Home</a>
    <p>Title: <b>{post.title}</b></p>
    <p>Author: <b>{author.name}</b></p>
    <p>Language: <b>{post.lang}</b></p>
    <p>Category: <b>{category.name}</b></p>
  </header>
  <hr />
  <article>
    <Markdown.Inline of={post?.content || "# Error generating page"} />
  </article>
  <hr />
  <p>
    Created with AI
  </p>
  <p>Made by <b>Tom√°s Cichero</b> - See <a href="https://github.com/Martoxdlol/autogen-blog">Github repo</a></p>
</Layout>
