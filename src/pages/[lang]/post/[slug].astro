---
import type { MarkdownInstance } from "astro";
import { Markdown } from "@astropub/md";
import { translate } from "../../../aitools/translate";
import { getCurrentLang, languages } from "../../../internationalization";
import { getSlug } from "../../../util";
import Layout from "../../../layouts/Layout.astro";
import { generateTitle } from "../../../aitools/title";
import { description } from "../../../aitools/description";

// For the future, if I enable SSR
export const prerender = true;

const posts: MarkdownInstance<Record<string, any>>[] = await Astro.glob(
    "../../../../posts/*"
);

export async function getStaticPaths() {
    const posts: MarkdownInstance<Record<string, any>>[] = await Astro.glob(
        "../../../../posts/*"
    );

    const nonDraftPosts = posts.filter((post) => !post.frontmatter.draft);

    const paths: { params: { slug: string; lang: string } }[] = [];

    for (const post of nonDraftPosts) {
        for (const lang of languages.list) {
            paths.push({
                params: {
                    lang: lang.code,
                    slug: getSlug(post.file),
                },
            });
        }
    }

    return paths;
}

const slug = Astro.params.slug?.toLocaleLowerCase();
const lang = getCurrentLang(Astro);

const post = posts.find((post) => getSlug(post.file) === slug)!;

let title: string | null = post.frontmatter.title || null;

const headings = post.getHeadings();

if (!title && headings[0]?.depth == 1) title = headings[0].text;

const originalLanguage = post.frontmatter.lang || languages.default;

if (title && lang.code != originalLanguage) {
    title = await translate(title, lang.slug);
}

let rawContent = post.rawContent();

if (lang.code != originalLanguage) {
    rawContent = await translate(rawContent, lang.slug);
}
---

<Layout title={title || await generateTitle(rawContent)} description={await description(rawContent)}>
    <title>{title}</title>
    <Markdown.Inline of={rawContent} />
</Layout>

<style>
    img {
        width: 100%;
        max-width: 400px;
    }
</style>